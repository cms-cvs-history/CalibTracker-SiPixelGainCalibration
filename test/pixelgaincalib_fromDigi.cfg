process PIXELGAINCALIB = 
{
   untracked PSet maxEvents = {untracked int32 input = -1}
   source = PoolSource { 
	untracked vstring fileNames = { "rfio:/castor/cern.ch/user/f/fblekman/pix_data/GainCalibrations/Digis/GainCalibration20070514b_digi.root" }
   }     

#use the settings for the calibration database access from the CondTools package
   include "CondTools/SiPixel/data/SiPixelGainCalibrationService.cfi"
   replace SiPixelGainCalibrationServiceParameters.UseCalibDataFromDB = false



  service = TFileService {    string fileName = "histogramsGainCalibration_fromDigi.root" }

   # Message Logger
#   include "FWCore/MessageLogger/data/MessageLogger.cfi"
#   or use your own 
   service = MessageLogger {	
	untracked vstring destinations = {"cout"}
	untracked PSet cout = {untracked string threshold = "ERROR"}
   }


#include the geometry
   include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
   include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"


   include "CalibTracker/SiPixelGainCalibration/data/SiPixelGainCalibrationAnalysis.cfi"
    replace SiPixelGainCalibrationAnalysis.inputFileName= "/afs/cern.ch/user/f/fblekman/public/calib_20070514b.dat"
   replace SiPixelGainCalibrationAnalysis.src = "siPixelDigis"
 	
	
   # module execution
   path p = { SiPixelGainCalibrationAnalysis }

# the database output
  service = PoolDBOutputService {
    string timetype = "runnumber"
    string connect = "sqlite_file:prova_gaincalib_fromdigi.db"
    untracked string catalog = "xmlcatalog_file:prova_dbcatalog_gaincalib_fromdigi.xml"
    VPSet toPut={ {string record= "SiPixelGainCalibrationRcd" string tag ="mytest_p"} } 
    PSet DBParameters = { 
	untracked string authenticationPath = "./"  
	untracked int32 messageLevel = 1
	untracked bool loadBlobStreamer = true
	}
  }

#  module print = AsciiOutputModule {}
#  endpath ep = { print }
   # Timing service
#    service = Timing {}

}
