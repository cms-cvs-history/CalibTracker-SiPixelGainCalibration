process PIXELGAINCALIB = 
{
######################################################
# to change files change the following parameters:
# 1. the input file (PixelSLinkDataInputSource.fileNames parameter)
# 2. the calib database tag
# the following wiki page has lists of datasets: 
# https://twiki.cern.ch/twiki/bin/view/CMS/TIF_and_PSI_data
######################################################

######################################################
#  define the number of events to run on (-1 = all)
   untracked PSet maxEvents = {untracked int32 input = -1}

# input source:
#############################################
#   definition of the input file that contains the digi
   source = PoolSource { 
	untracked vstring fileNames = { "file:/FPixData/FPIX/HC-Z1/HD2/Blades04_05_06/Analysis/GainCalibration.14Aug07_1850.digis.root" }
   }     

#################################################
#use the settings for the calibration database access from the CondTools package
   include "CondTools/SiPixel/data/SiPixelGainCalibrationService.cfi"


  service = TFileService {    string fileName = "histogramsGainCalibration_fromDigi.root" }




   include "CalibTracker/SiPixelGainCalibration/data/SiPixelGainCalibrationAnalysis.cfi"
   replace SiPixelGainCalibrationAnalysis.src = "siPixelDigis"

######################################################
#  Read settings from the calibration database 
######################################################

   include "CondCore/DBCommon/data/CondDBCommon.cfi"
# name of the database 
   replace CondDBCommon.connect = "sqlite_file:/afs/cern.ch/cms/Tracker/Pixel/configuration/TestDatabase.db"
   replace CondDBCommon.timetype = "runnumber"
   replace CondDBCommon.DBParameters.messageLevel = 0
   replace CondDBCommon.DBParameters.authenticationPath="."
   es_source = PoolDBESSource {
	using CondDBCommon
	VPSet toGet = { { 
			string record = "SiPixelCalibConfigurationRcd"
			# change the tag appropriately. Look at /afs/cern.ch/cms/Tracker/Pixel/configuration/TestDatabase.txt for existing tag names.
			string tag = "HC-Z1_HD1_B01_02_03_Gain_23Aug07_1851"
			} }
   }

   replace SiPixelGainCalibrationAnalysis.doSCurve = false
#   replace SiPixelGainCalibrationAnalysis.rootFunctionForFit =  "0.5*[2]*(1+TMath::Erf((x-[0])/([1]*sqrt(2))))"
   replace SiPixelGainCalibrationAnalysis.saveGainCurvesWithBadChi2 = true
   replace SiPixelGainCalibrationAnalysis.saveAllGainCurvesForGivenPlaquettes = true
   replace SiPixelGainCalibrationAnalysis.plaquettesToSave = {'FPix_Bp1_D1_BLD4_PNL1_PLQ2'}

#   replace SiPixelGainCalibrationAnalysis.inputFileName= "/afs/cern.ch/user/f/fblekman/public/calib.dat_GainCalibration_hd-z1_bld4_5_6_070621k"

	
######################### include all necessary files #########################
# only edit when you know what you're doing!!!

include "CalibTracker/SiPixelGainCalibration/data/fromDigi.cff" 
	

   # Message Logger
#   include "FWCore/MessageLogger/data/MessageLogger.cfi"
#   or use your own 
   service = MessageLogger {	
	untracked vstring destinations = {"cout"}
	untracked PSet cout = {untracked string threshold = "ERROR"}
   }

# the database output
  service = PoolDBOutputService {
    string timetype = "runnumber"
    string connect = "sqlite_file:prova_gaincalib_fromdigi.db"
    VPSet toPut={ {string record= "SiPixelGainCalibrationRcd" string tag ="GainCalib_v2_test"} }   
    untracked string BlobStreamerName="DefaultBlobStreamingService"
    PSet DBParameters = { 
	untracked string authenticationPath = "./"  
	untracked int32 messageLevel = 1
	}
  }

   # module execution
   path p = { SiPixelGainCalibrationAnalysis }
}
